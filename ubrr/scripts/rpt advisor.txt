"GENERAL INFORMATION SECTION
-------------------------------------------------------------------------------
Tuning Task Name   : dbykov_tuning_task
Tuning Task Owner  : A4M
Workload Type      : Single SQL Statement
Scope              : COMPREHENSIVE
Time Limit(seconds): 3600
Completion Status  : COMPLETED
Started at         : 06/03/2022 18:14:08
Completed at       : 06/03/2022 18:46:46

-------------------------------------------------------------------------------
Schema Name: A4M
SQL ID     : d31a01j48gqn7
SQL Text   :         SELECT ROWIDTOCHAR(A.ROWID), C.TYPE FROM TACCOUNT A,
             TCONTRACTITEM I, TCONTRACT C WHERE A.BRANCH = :B1 AND ( EXISTS (
             SELECT C1.BRANCH FROM TACC2CARD C1 WHERE C1.BRANCH = A.BRANCH
             AND C1.ACCOUNTNO = A.ACCOUNTNO ) OR EXISTS ( SELECT /*+ ORDERED
             USE_NL(Ccc CustProd RefreshCustProd) INDEX_ASC(CCC
             PK_ACC2CUSTOMER) */ CCC.BRANCH FROM TACC2CUSTOMER CCC WHERE
             CCC.BRANCH = A.BRANCH AND CCC.ACCOUNTNO = A.ACCOUNTNO ) ) AND (
             ( A.UPDATESYSDATE > :B2 ) ) AND I.BRANCH (+) = A.BRANCH AND
             I.ITEMTYPE (+) = 1 AND I.KEY (+) = A.ACCOUNTNO AND C.BRANCH (+)
             = I.BRANCH AND C.NO (+) = I.NO ORDER BY 2
                     
Bind Variables :
 1 -  (NUMBER):1
 2 -  (DATE):2022-05-01:00:00:00

-------------------------------------------------------------------------------
FINDINGS SECTION (2 findings)
-------------------------------------------------------------------------------

1- SQL Profile Finding (see explain plans section below)
--------------------------------------------------------
  2 potentially better execution plans were found for this statement. Choose
  one of the following SQL profiles to implement.

  Recommendation (estimated benefit: 16.89%)
  ------------------------------------------
  - Consider accepting the recommended SQL profile.
    execute dbms_sqltune.accept_sql_profile(task_name =>
            'dbykov_tuning_task', task_owner => 'A4M', replace => TRUE);

  Recommendation (estimated benefit: 92.31%)
  ------------------------------------------
  - Consider accepting the recommended SQL profile to use parallel execution
    for this statement.
    execute dbms_sqltune.accept_sql_profile(task_name =>
            'dbykov_tuning_task', task_owner => 'A4M', replace => TRUE,
            profile_type => DBMS_SQLTUNE.PX_PROFILE);

  Executing this query parallel with DOP 12 will improve its response time
  90.75% over the SQL profile plan. However, this will increase the
  statement's resource consumption by an estimated 10.98% which may result in
  a reduction of system throughput. Also, because these resources are consumed
  over a much smaller duration, the response time of concurrent statements
  might be negatively impacted.

  The following data shows some sampled statistics for this SQL from the past
  week and projected weekly values when parallel execution is enabled.

                                 Past week sampled statistics for this SQL
                                 -----------------------------------------
  Number of executions                                                   0 
  Percent of total activity                                              0 
  Percent of samples with #Active Sessions > 2*CPU                       0 
  Weekly DB time (in sec)                                                0 

                              Projected statistics with Parallel Execution
                              --------------------------------------------
  Weekly DB time (in sec)                                                0 

2- Index Finding (see explain plans section below)
--------------------------------------------------
  The execution plan of this statement can be improved by creating one or more
  indices.

  Recommendation (estimated benefit: 99.55%)
  ------------------------------------------
  - Consider running the Access Advisor to improve the physical schema design
    or creating the recommended index.
    create index A4M.IDX$$_25E3B0003 on A4M.TACCOUNT("BRANCH","UPDATESYSDATE","
    ACCOUNTNO");

  - Consider running the Access Advisor to improve the physical schema design
    or creating the recommended index.
    create index A4M.IDX$$_25E3B0004 on A4M.TACC2CARD("ACCOUNTNO","BRANCH");

  - Consider running the Access Advisor to improve the physical schema design
    or creating the recommended index.
    create index A4M.IDX$$_25E3B0005 on A4M.TACC2CUSTOMER("ACCOUNTNO","BRANCH")
    ;

  Rationale
  ---------
    Creating the recommended indices significantly improves the execution plan
    of this statement. However, it might be preferable to run "Access Advisor"
    using a representative SQL workload as opposed to a single statement. This
    will allow to get comprehensive index recommendations which takes into
    account index maintenance overhead and additional space consumption.

-------------------------------------------------------------------------------
EXPLAIN PLANS SECTION
-------------------------------------------------------------------------------

1- Original With Adjusted Cost
------------------------------
Plan hash value: 357251092

------------------------------------------------------------------------------------------------------
| Id  | Operation                       | Name               | Rows  | Bytes | Cost (%CPU)| Time     |
------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                |                    |     1 |   134 |   126K  (1)| 00:00:10 |
|   1 |  SORT ORDER BY                  |                    |     1 |   134 |   126K  (1)| 00:00:10 |
|   2 |   NESTED LOOPS OUTER            |                    |     1 |   134 |   126K  (1)| 00:00:10 |
|   3 |    NESTED LOOPS OUTER           |                    |     1 |   111 |   126K  (1)| 00:00:10 |
|   4 |     NESTED LOOPS                |                    |     1 |    68 |   126K  (1)| 00:00:10 |
|   5 |      VIEW                       | VW_SQ_1            |    17M|   406M| 48253   (1)| 00:00:04 |
|   6 |       HASH UNIQUE               |                    |     1 |   406M| 48253   (1)| 00:00:04 |
|   7 |        UNION-ALL                |                    |       |       |            |          |
|*  8 |         INDEX RANGE SCAN        | PK_ACC2CUSTOMER    |  7269K|   166M| 32308   (1)| 00:00:03 |
|*  9 |         TABLE ACCESS FULL       | TACC2CARD          |    10M|   240M| 15945   (1)| 00:00:02 |
|* 10 |      TABLE ACCESS BY INDEX ROWID| TACCOUNT           |     1 |    44 |     3   (0)| 00:00:01 |
|* 11 |       INDEX UNIQUE SCAN         | IACCOUNT_ACCOUNTNO |     1 |       |     2   (0)| 00:00:01 |
|* 12 |     TABLE ACCESS BY INDEX ROWID | TCONTRACTITEM      |     1 |    43 |     2   (0)| 00:00:01 |
|* 13 |      INDEX UNIQUE SCAN          | ICONTRACTITEM_KEY  |     1 |       |     1   (0)| 00:00:01 |
|  14 |    TABLE ACCESS BY INDEX ROWID  | TCONTRACT          |     1 |    23 |     2   (0)| 00:00:01 |
|* 15 |     INDEX UNIQUE SCAN           | PK_CONTRACT        |     1 |       |     1   (0)| 00:00:01 |
------------------------------------------------------------------------------------------------------
 
Predicate Information (identified by operation id):
---------------------------------------------------
 
   8 - access("CCC"."BRANCH"=:B1)
   9 - filter("C1"."BRANCH"=:B1)
  10 - filter("A"."UPDATESYSDATE">:B2)
  11 - access("A"."BRANCH"=:B1 AND "VW_COL_2"="A"."ACCOUNTNO")
       filter("VW_COL_1"="A"."BRANCH")
  12 - filter("I"."ITEMTYPE"(+)=1)
  13 - access("I"."BRANCH"(+)=:B1 AND "I"."KEY"(+)="A"."ACCOUNTNO")
  15 - access("C"."BRANCH"(+)="I"."BRANCH" AND "C"."NO"(+)="I"."NO")

2- Using SQL Profile
--------------------
Plan hash value: 2073144135

------------------------------------------------------------------------------------------------------
| Id  | Operation                       | Name               | Rows  | Bytes | Cost (%CPU)| Time     |
------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                |                    |     1 |   134 |   105K  (2)| 00:00:09 |
|   1 |  SORT ORDER BY                  |                    |     1 |   134 |   105K  (2)| 00:00:09 |
|   2 |   NESTED LOOPS OUTER            |                    |     1 |   134 |   105K  (2)| 00:00:09 |
|   3 |    NESTED LOOPS OUTER           |                    |     1 |   111 |   105K  (2)| 00:00:09 |
|   4 |     NESTED LOOPS                |                    |     1 |    68 |   105K  (2)| 00:00:09 |
|   5 |      VIEW                       | VW_SQ_1            |    17M|   406M| 26841   (1)| 00:00:03 |
|   6 |       HASH UNIQUE               |                    |     1 |   406M| 26841   (1)| 00:00:03 |
|   7 |        UNION-ALL                |                    |       |       |            |          |
|*  8 |         TABLE ACCESS FULL       | TACC2CUSTOMER      |  7269K|   166M| 10897   (1)| 00:00:01 |
|*  9 |         TABLE ACCESS FULL       | TACC2CARD          |    10M|   240M| 15945   (1)| 00:00:02 |
|* 10 |      TABLE ACCESS BY INDEX ROWID| TACCOUNT           |     1 |    44 |     3   (0)| 00:00:01 |
|* 11 |       INDEX UNIQUE SCAN         | IACCOUNT_ACCOUNTNO |     1 |       |     2   (0)| 00:00:01 |
|* 12 |     TABLE ACCESS BY INDEX ROWID | TCONTRACTITEM      |     1 |    43 |     2   (0)| 00:00:01 |
|* 13 |      INDEX UNIQUE SCAN          | ICONTRACTITEM_KEY  |     1 |       |     1   (0)| 00:00:01 |
|  14 |    TABLE ACCESS BY INDEX ROWID  | TCONTRACT          |     1 |    23 |     2   (0)| 00:00:01 |
|* 15 |     INDEX UNIQUE SCAN           | PK_CONTRACT        |     1 |       |     1   (0)| 00:00:01 |
------------------------------------------------------------------------------------------------------
 
Predicate Information (identified by operation id):
---------------------------------------------------
 
   8 - filter("CCC"."BRANCH"=:B1)
   9 - filter("C1"."BRANCH"=:B1)
  10 - filter("A"."UPDATESYSDATE">:B2)
  11 - access("A"."BRANCH"=:B1 AND "VW_COL_2"="A"."ACCOUNTNO")
       filter("VW_COL_1"="A"."BRANCH")
  12 - filter("I"."ITEMTYPE"(+)=1)
  13 - access("I"."BRANCH"(+)=:B1 AND "I"."KEY"(+)="A"."ACCOUNTNO")
  15 - access("C"."BRANCH"(+)="I"."BRANCH" AND "C"."NO"(+)="I"."NO")

3- Using New Indices
--------------------
Plan hash value: 484541881

----------------------------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                                   | Name              | Rows  | Bytes | Cost (%CPU)| Time     |    TQ  |IN-OUT| PQ Distrib |
----------------------------------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                            |                   | 25416 |  2730K|   466   (1)| 00:00:01 |        |      |            |
|   1 |  PX COORDINATOR                             |                   |       |       |            |          |        |      |            |
|   2 |   PX SEND QC (ORDER)                        | :TQ20003          | 25416 |  2730K|   466   (1)| 00:00:01 |  Q2,03 | P->S | QC (ORDER) |
|   3 |    SORT ORDER BY                            |                   | 25416 |  2730K|   466   (1)| 00:00:01 |  Q2,03 | PCWP |            |
|   4 |     PX RECEIVE                              |                   |       |       |            |          |  Q2,03 | PCWP |            |
|   5 |      PX SEND RANGE                          | :TQ20002          |       |       |            |          |  Q2,02 | P->P | RANGE      |
|   6 |       BUFFER SORT                           |                   | 25416 |  2730K|            |          |  Q2,02 | PCWP |            |
|   7 |        CONCATENATION                        |                   |       |       |            |          |  Q2,02 | PCWP |            |
|   8 |         NESTED LOOPS OUTER                  |                   |   635 | 69850 |   228   (0)| 00:00:01 |  Q2,02 | PCWP |            |
|   9 |          NESTED LOOPS OUTER                 |                   |   635 | 55245 |   112   (0)| 00:00:01 |  Q2,02 | PCWP |            |
|  10 |           BUFFER SORT                       |                   |       |       |            |          |  Q2,02 | PCWC |            |
|  11 |            PX RECEIVE                       |                   |       |       |            |          |  Q2,02 | PCWP |            |
|  12 |             PX SEND ROUND-ROBIN             | :TQ20000          |       |       |            |          |        | S->P | RND-ROBIN  |
|  13 |              BUFFER SORT                    |                   | 25416 |  2730K|            |          |        |      |            |
|* 14 |               INDEX RANGE SCAN              | IDX$$_25E3B0003   |   635 | 27940 |     4   (0)| 00:00:01 |        |      |            |
|* 15 |                INDEX RANGE SCAN             | IDX$$_25E3B0005   |     1 |    24 |     3   (0)| 00:00:01 |        |      |            |
|* 16 |           TABLE ACCESS BY INDEX ROWID       | TCONTRACTITEM     |     1 |    43 |     0   (0)| 00:00:01 |  Q2,02 | PCWP |            |
|* 17 |            INDEX UNIQUE SCAN                | ICONTRACTITEM_KEY |     1 |       |     0   (0)| 00:00:01 |  Q2,02 | PCWP |            |
|  18 |          TABLE ACCESS BY INDEX ROWID        | TCONTRACT         |     1 |    23 |     0   (0)| 00:00:01 |  Q2,02 | PCWP |            |
|* 19 |           INDEX UNIQUE SCAN                 | PK_CONTRACT       |     1 |       |     0   (0)| 00:00:01 |  Q2,02 | PCWP |            |
|  20 |         BUFFER SORT                         |                   |       |       |            |          |  Q2,02 | PCWC |            |
|  21 |          PX RECEIVE                         |                   |   604 | 66440 |   228   (0)| 00:00:01 |  Q2,02 | PCWP |            |
|  22 |           PX SEND ROUND-ROBIN               | :TQ20001          |   604 | 66440 |   228   (0)| 00:00:01 |        | S->P | RND-ROBIN  |
|  23 |            BUFFER SORT                      |                   | 25416 |  2730K|            |          |        |      |            |
|  24 |             PX COORDINATOR                  |                   |       |       |            |          |        |      |            |
|  25 |              PX SEND QC (RANDOM)            | :TQ10001          |   604 | 66440 |   228   (0)| 00:00:01 |  Q1,01 | P->S | QC (RAND)  |
|  26 |               BUFFER SORT                   |                   | 25416 |  2730K|            |          |  Q1,01 | PCWP |            |
|  27 |                NESTED LOOPS OUTER           |                   |   604 | 66440 |   228   (0)| 00:00:01 |  Q1,01 | PCWP |            |
|  28 |                 NESTED LOOPS OUTER          |                   |   604 | 52548 |   116   (0)| 00:00:01 |  Q1,01 | PCWP |            |
|  29 |                  BUFFER SORT                |                   |       |       |            |          |  Q1,01 | PCWC |            |
|  30 |                   PX RECEIVE                |                   |       |       |            |          |  Q1,01 | PCWP |            |
|  31 |                    PX SEND ROUND-ROBIN      | :TQ10000          |       |       |            |          |        | S->P | RND-ROBIN  |
|  32 |                     BUFFER SORT             |                   | 25416 |  2730K|            |          |        |      |            |
|* 33 |                      INDEX RANGE SCAN       | IDX$$_25E3B0003   |   604 | 26576 |     4   (0)| 00:00:01 |        |      |            |
|* 34 |                       INDEX RANGE SCAN      | IDX$$_25E3B0005   |     1 |    24 |     3   (0)| 00:00:01 |        |      |            |
|* 35 |                       INDEX RANGE SCAN      | IDX$$_25E3B0004   |     1 |    24 |     3   (0)| 00:00:01 |        |      |            |
|* 36 |                  TABLE ACCESS BY INDEX ROWID| TCONTRACTITEM     |     1 |    43 |     0   (0)| 00:00:01 |  Q1,01 | PCWP |            |
|* 37 |                   INDEX UNIQUE SCAN         | ICONTRACTITEM_KEY |     1 |       |     0   (0)| 00:00:01 |  Q1,01 | PCWP |            |
|  38 |                 TABLE ACCESS BY INDEX ROWID | TCONTRACT         |     1 |    23 |     0   (0)| 00:00:01 |  Q1,01 | PCWP |            |
|* 39 |                  INDEX UNIQUE SCAN          | PK_CONTRACT       |     1 |       |     0   (0)| 00:00:01 |  Q1,01 | PCWP |            |
----------------------------------------------------------------------------------------------------------------------------------------------
 
Predicate Information (identified by operation id):
---------------------------------------------------
 
  14 - access("A"."BRANCH"=:B1 AND "A"."UPDATESYSDATE">:B2)
       filter( EXISTS (SELECT /*+ ORDERED INDEX_ASC ("CCC" "PK_ACC2CUSTOMER") USE_NL ("CCC") */ 0 FROM "TACC2CUSTOMER" "CCC" WHERE 
              "CCC"."BRANCH"=:B1 AND "CCC"."ACCOUNTNO"=:B2))
  15 - access("CCC"."ACCOUNTNO"=:B1 AND "CCC"."BRANCH"=:B2)
  16 - filter("I"."ITEMTYPE"(+)=1)
  17 - access("I"."BRANCH"(+)=:B1 AND "I"."KEY"(+)="A"."ACCOUNTNO")
  19 - access("C"."BRANCH"(+)="I"."BRANCH" AND "C"."NO"(+)="I"."NO")
  33 - access("A"."BRANCH"=:B1 AND "A"."UPDATESYSDATE">:B2)
       filter(LNNVL( EXISTS (SELECT /*+ ORDERED INDEX_ASC ("CCC" "PK_ACC2CUSTOMER") USE_NL ("CCC") */ 0 FROM "TACC2CUSTOMER" "CCC" 
              WHERE "CCC"."BRANCH"=:B1 AND "CCC"."ACCOUNTNO"=:B2)) AND  EXISTS (SELECT 0 FROM "TACC2CARD" "C1" WHERE "C1"."BRANCH"=:B3 AND 
              "C1"."ACCOUNTNO"=:B4))
  34 - access("CCC"."ACCOUNTNO"=:B1 AND "CCC"."BRANCH"=:B2)
  35 - access("C1"."ACCOUNTNO"=:B1 AND "C1"."BRANCH"=:B2)
  36 - filter("I"."ITEMTYPE"(+)=1)
  37 - access("I"."BRANCH"(+)=:B1 AND "I"."KEY"(+)="A"."ACCOUNTNO")
  39 - access("C"."BRANCH"(+)="I"."BRANCH" AND "C"."NO"(+)="I"."NO")

4- Using Parallel Execution
---------------------------
Plan hash value: 1016315608

---------------------------------------------------------------------------------------------------------------------------------------
| Id  | Operation                           | Name               | Rows  | Bytes | Cost (%CPU)| Time     |    TQ  |IN-OUT| PQ Distrib |
---------------------------------------------------------------------------------------------------------------------------------------
|   0 | SELECT STATEMENT                    |                    |     1 |   134 |  9739   (2)| 00:00:01 |        |      |            |
|   1 |  PX COORDINATOR                     |                    |       |       |            |          |        |      |            |
|   2 |   PX SEND QC (ORDER)                | :TQ10002           |     1 |   134 |  9739   (2)| 00:00:01 |  Q1,02 | P->S | QC (ORDER) |
|   3 |    SORT ORDER BY                    |                    |     1 |   134 |  9739   (2)| 00:00:01 |  Q1,02 | PCWP |            |
|   4 |     PX RECEIVE                      |                    |     1 |   134 |  9738   (2)| 00:00:01 |  Q1,02 | PCWP |            |
|   5 |      PX SEND RANGE                  | :TQ10001           |     1 |   134 |  9738   (2)| 00:00:01 |  Q1,01 | P->P | RANGE      |
|   6 |       NESTED LOOPS OUTER            |                    |     1 |   134 |  9738   (2)| 00:00:01 |  Q1,01 | PCWP |            |
|   7 |        NESTED LOOPS OUTER           |                    |     1 |   111 |  9738   (2)| 00:00:01 |  Q1,01 | PCWP |            |
|   8 |         NESTED LOOPS                |                    |     1 |    68 |  9738   (2)| 00:00:01 |  Q1,01 | PCWP |            |
|   9 |          VIEW                       | VW_SQ_1            |    17M|   406M|  2482   (1)| 00:00:01 |  Q1,01 | PCWP |            |
|  10 |           HASH UNIQUE               |                    |     1 |   406M|  2482   (1)| 00:00:01 |  Q1,01 | PCWP |            |
|  11 |            PX RECEIVE               |                    |     1 |   406M|  2482   (1)| 00:00:01 |  Q1,01 | PCWP |            |
|  12 |             PX SEND HASH            | :TQ10000           |     1 |   406M|  2482   (1)| 00:00:01 |  Q1,00 | P->P | HASH       |
|  13 |              HASH UNIQUE            |                    |     1 |   406M|  2482   (1)| 00:00:01 |  Q1,00 | PCWP |            |
|  14 |               UNION-ALL             |                    |       |       |            |          |  Q1,00 | PCWP |            |
|  15 |                PX BLOCK ITERATOR    |                    |  7269K|   166M|  1008   (1)| 00:00:01 |  Q1,00 | PCWC |            |
|* 16 |                 TABLE ACCESS FULL   | TACC2CUSTOMER      |  7269K|   166M|  1008   (1)| 00:00:01 |  Q1,00 | PCWP |            |
|  17 |                PX BLOCK ITERATOR    |                    |    10M|   240M|  1475   (1)| 00:00:01 |  Q1,00 | PCWC |            |
|* 18 |                 TABLE ACCESS FULL   | TACC2CARD          |    10M|   240M|  1475   (1)| 00:00:01 |  Q1,00 | PCWP |            |
|* 19 |          TABLE ACCESS BY INDEX ROWID| TACCOUNT           |     1 |    44 |     0   (0)| 00:00:01 |  Q1,01 | PCWP |            |
|* 20 |           INDEX UNIQUE SCAN         | IACCOUNT_ACCOUNTNO |     1 |       |     0   (0)| 00:00:01 |  Q1,01 | PCWP |            |
|* 21 |         TABLE ACCESS BY INDEX ROWID | TCONTRACTITEM      |     1 |    43 |     0   (0)| 00:00:01 |  Q1,01 | PCWP |            |
|* 22 |          INDEX UNIQUE SCAN          | ICONTRACTITEM_KEY  |     1 |       |     0   (0)| 00:00:01 |  Q1,01 | PCWP |            |
|  23 |        TABLE ACCESS BY INDEX ROWID  | TCONTRACT          |     1 |    23 |     0   (0)| 00:00:01 |  Q1,01 | PCWP |            |
|* 24 |         INDEX UNIQUE SCAN           | PK_CONTRACT        |     1 |       |     0   (0)| 00:00:01 |  Q1,01 | PCWP |            |
---------------------------------------------------------------------------------------------------------------------------------------
 
Predicate Information (identified by operation id):
---------------------------------------------------
 
  16 - filter("CCC"."BRANCH"=:B1)
  18 - filter("C1"."BRANCH"=:B1)
  19 - filter("A"."UPDATESYSDATE">:B2)
  20 - access("A"."BRANCH"=:B1 AND "VW_COL_2"="A"."ACCOUNTNO")
       filter("VW_COL_1"="A"."BRANCH")
  21 - filter("I"."ITEMTYPE"(+)=1)
  22 - access("I"."BRANCH"(+)=:B1 AND "I"."KEY"(+)="A"."ACCOUNTNO")
  24 - access("C"."BRANCH"(+)="I"."BRANCH" AND "C"."NO"(+)="I"."NO")

-------------------------------------------------------------------------------
"